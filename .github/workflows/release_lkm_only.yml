#
# Copyright (C) 2022 Ing <https://github.com/wjz304>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: release lkm only

on:
  workflow_dispatch:
    inputs:
      version:
        description: "format %y.%-m.$i"
        required: false
        type: string
      #target1:
      #  description: "rp-r1000nk-7.3-5.10.55-prod.ko.gz"
      #  required: true
      #  type: string
      #  default: "rp-r1000nk-7.3-5.10.55-prod.ko.gz"  # 기본값 설정
      #target2:
      #  description: "rp-geminilakenk-7.3-5.10.55-prod.ko.gz"
      #  required: true
      #  type: string
      #  default: "rp-geminilakenk-7.3-5.10.55-prod.ko.gz"  # 기본값 설정
      #target3:
      #  description: "rp-v1000nk-7.3-5.10.55-prod.ko.gz"
      #  required: true
      #  type: string
      #  default: "rp-v1000nk-7.3-5.10.55-prod.ko.gz"  # 기본값 설정
      #target4:
      #  description: "rp-epyc7002-7.3-5.10.55-prod.ko.gz"
      #  required: true
      #  type: string
      #  default: "rp-epyc7002-7.3-5.10.55-prod.ko.gz"  # 기본값 설정
      prerelease:
        description: "pre release"
        default: false  # 기본값 설정
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Init Env
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Seoul"
 
      - name: Calculate Version
        run: |
          # Calculate Version
          VERSION=""
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
          else
            LATEST_TAG="$(curl -skL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r ".tag_name" 2>/dev/null)"
            curl -kLO https://github.com/${{ github.repository }}/releases/download/${LATEST_TAG}/rp-lkms.zip 
            if [[ -n "${LATEST_TAG}" && "`echo ${LATEST_TAG} | cut -d '.' -f 1,2`" = "`date +'%y.%-m.%-d'`" ]]; then  # format %y.%-m.$i
              VERSION="`echo ${LATEST_TAG} | awk -F '.' '{$3=$3+1}1' OFS='.'`"
            else
              VERSION="`date +'%y.%-m.%-d'`"
            fi
          fi

          if [ -n "${VERSION}" ]; then
            # Modify Source File
            echo "Version: ${VERSION}"
            echo "${VERSION}" >VERSION
            #echo "${VERSION}" >"./rp-lkms/VERSION"
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          fi
          
      - name: Zip Lkms
        if: env.VERSION != ''      
        run: |
          echo "## Current Directory: $(pwd)"
          echo "## Files in workspace:"
          ls -lR
          
          echo "## Target files verification:"
          #file ${{ inputs.target1 }} ${{ inputs.target2 }} ${{ inputs.target3 }} ${{ inputs.target4 }} ${{ inputs.target5 }} VERSION
          
          echo "## Creating ZIP..."
          zip -j -9 rp-lkms.zip \
            "./6.2.4/*.gz" \
            VERSION

      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.VERSION != ''
        with:
          tag_name: ${{ env.VERSION }}
          prerelease: ${{ inputs.prerelease }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          files: |
            rp-lkms.zip
